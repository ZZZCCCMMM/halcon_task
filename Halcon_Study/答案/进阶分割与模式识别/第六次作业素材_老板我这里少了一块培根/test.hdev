<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="22.05.0.0">
<procedure name="main">
<interface/>
<body>
<l>read_image (Image, 'data/pizza_01.png')</l>
<l>rgb1_to_gray(Image, GrayImage)</l>
<l>get_image_size(GrayImage, Width, Height)</l>
<l>dev_close_window()</l>
<l>dev_open_window(0, 0, Width, Height, 'black', WindowHandle)</l>
<l>dev_display(Image)</l>
<l>create_class_mlp(7,20,2,'softmax','normalization', 10, 42, MLPHandle)</l>
<c>*特征</c>
<l>decompose3(Image, R, G, B)</l>
<l>texture_laws(GrayImage, ImageTexture1, 'el', 2, 5)</l>
<l>texture_laws(GrayImage, ImageTexture2, 'le', 2, 5)</l>
<l>texture_laws(GrayImage, ImageTexture3, 'es', 2, 5)</l>
<l>texture_laws(GrayImage,ImageTexture4,'ls', 2, 5)</l>
<l>compose7(R,G,B,ImageTexture1, ImageTexture2, ImageTexture3, ImageTexture4, MultiChannelImage)</l>
<c>*分类区域</c>
<c>*目标</c>
<l>gen_circle (ROI_0, 207.35, 453.915, 62.2327)</l>
<l>gen_circle (TMP_Region, 252.29, 786.899, 62.0657)</l>
<l>union2 (ROI_0, TMP_Region, ROI_0)</l>
<l>gen_circle (TMP_Region, 483.412, 595.968, 68.2339)</l>
<l>union2 (ROI_0, TMP_Region, ROI_0)</l>
<l>gen_circle (TMP_Region, 465.757, 279.786, 58.8432)</l>
<l>union2 (ROI_0, TMP_Region, ROI_0)</l>
<l>gen_circle (TMP_Region, 764.29, 670.813, 41.6332)</l>
<l>union2 (ROI_0, TMP_Region, ROI_0)</l>
<l>gen_circle (TMP_Region, 521.933, 863.271, 79.9042)</l>
<l>union2 (ROI_0, TMP_Region, ROI_0)</l>
<l>gen_circle (TMP_Region, 720.955, 383.653, 56.8844)</l>
<l>union2 (ROI_0, TMP_Region, Target)</l>
<c>*背景</c>
<l>dilation_circle(Target,Temp,130)</l>
<l>complement(Temp, Background)</l>
<c>*</c>
<l>concat_obj(Background,Target,ClassRegs)</l>
<l>add_samples_image_class_mlp(MultiChannelImage,ClassRegs,MLPHandle)</l>
<l>train_class_mlp(MLPHandle, 200, 1, 0.01, Error, ErrorLog)</l>
<c></c>
<c></c>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">ImageFiles := []</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">ImageFiles[0] := 'data/pizza_01.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="2">ImageFiles[1] := 'data/pizza_02.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="3">ImageFiles[2] := 'data/pizza_03.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    read_image (Image, ImageFiles[Index])</l>
<c>    *特征</c>
<l>    decompose3(Image, R, G, B)</l>
<l>    texture_laws(GrayImage, ImageTexture1, 'el', 2, 5)</l>
<l>    texture_laws(GrayImage, ImageTexture2, 'le', 2, 5)</l>
<l>    texture_laws(GrayImage, ImageTexture3, 'es', 2, 5)</l>
<l>    texture_laws(GrayImage,ImageTexture4,'ls', 2, 5)</l>
<l>    compose7(R,G,B,ImageTexture1, ImageTexture2, ImageTexture3, ImageTexture4, MultiChannelImage)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    classify_image_class_mlp(MultiChannelImage, ClassRegions, MLPHandle, 0.5)</l>
<l>    select_obj(ClassRegions,ObjectSelected, 2)</l>
<l>    fill_up(ObjectSelected, RegionFillUp)</l>
<l>    erosion_circle(RegionFillUp, RegionErosion,90)</l>
<l>    connection(RegionErosion, ConnectedRegions)</l>
<l>    count_obj(ConnectedRegions, Number)</l>
<l>    dilation_circle(ConnectedRegions, RegionDilation, 95)</l>
<l>    gen_contour_region_xld(RegionDilation, Contours, 'border')</l>
<l>    fit_circle_contour_xld(Contours, 'algebraic', -1, 0, 0, 3, 2, Row, Column, Radius, StartPhi, EndPhi, PointOrder)</l>
<l>    gen_circle(Circle, Row, Column, Radius)</l>
<l>    gen_cross_contour_xld(Cross, Row, Column, 26, 0.785398)</l>
<c>    *显示</c>
<l>    dev_set_draw('margin')</l>
<l>    dev_display(Image)</l>
<l>    dev_display(Circle)</l>
<l>    dev_display(Cross)</l>
<l>    dev_get_window(WindowHandle)</l>
<l>    disp_message(WindowHandle,'培根数量：'+Number,'image',10,10,'black', 'true')</l>
<l>    stop()</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endfor</l>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
