<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="22.05.0.0">
<procedure name="main">
<interface/>
<body>
<l>Categories:=['Without Mask','With Mask']</l>
<c></c>
<c></c>
<c></c>
<l>dev_get_window(WindowHandle)</l>
<l>File_head:='F'</l>
<l>create_class_svm(15*20*3,'rbf', 0.006, 0.05, 2, 'one-versus-one',  'principal_components',10, SVMHandle)</l>
<c></c>
<c></c>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,1]" as_ord="1">* Image Acquisition 03: Code generated by Image Acquisition 03</c>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,2]" as_ord="1">ImageFiles := []</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="1">ImageFiles[0] := 'WithMask/0.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="2">ImageFiles[1] := 'WithMask/1.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="3">ImageFiles[2] := 'WithMask/2.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="4">ImageFiles[3] := 'WithMask/3.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="5">ImageFiles[4] := 'WithMask/4.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="6">ImageFiles[5] := 'WithMask/5.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="7">ImageFiles[6] := 'WithMask/6.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="8">ImageFiles[7] := 'WithMask/7.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="9">ImageFiles[8] := 'WithMask/8.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="10">ImageFiles[9] := 'WithMask/9.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[1,3]" as_ord="11">ImageFiles[10] := 'WithMask/10.png'</l>
<c></c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    read_image (Image, ImageFiles[Index])</l>
<l>    decompose3(Image,R,G,B)</l>
<l>    trans_from_rgb(R,G,B,Y,U,V,'yuv')</l>
<l>    compose3(Y,U,V,YUV)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    zoom_image_size(YUV, ImageZoomed, 15, 20, 'constant')</l>
<c>        </c>
<c>        * Image Acquisition 01: Do something</c>
<l>    diff_of_gauss(ImageZoomed, DiffOfGauss,1, 0.6)</l>
<c></c>
<l>    get_domain(DiffOfGauss, Domain)</l>
<l>    get_region_points(Domain, Rows, Columns)</l>
<l>    get_grayval(ImageZoomed, Rows, Columns, Grayval)</l>
<c>        </c>
<l>    add_sample_class_svm(SVMHandle,real(Grayval),1)</l>
<c>        </c>
<l>    disp_message(WindowHandle, 'With Mask', 'window', 0, 0, 'black', 'true')</l>
<c as_id="image_acquisition" as_name="Image Acquisition 02" as_grp="[1,1]" as_ord="1">  </c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endfor</l>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,1]" as_ord="1">* Image Acquisition 04: Code generated by Image Acquisition 04</c>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,2]" as_ord="1">ImageFiles := []</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="1">ImageFiles[0] := 'WithoutMask/0.jpg'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="2">ImageFiles[1] := 'WithoutMask/1.jpg'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="3">ImageFiles[2] := 'WithoutMask/2.jpg'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="4">ImageFiles[3] := 'WithoutMask/3.jpg'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="5">ImageFiles[4] := 'WithoutMask/4.jpg'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="6">ImageFiles[5] := 'WithoutMask/5.jpg'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="7">ImageFiles[6] := 'WithoutMask/6.jpg'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="8">ImageFiles[7] := 'WithoutMask/7.jpg'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="9">ImageFiles[8] := 'WithoutMask/8.jpg'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="10">ImageFiles[9] := 'WithoutMask/9.jpg'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 04" as_grp="[1,3]" as_ord="11">ImageFiles[10] := 'WithoutMask/10.jpg'</l>
<c></c>
<l>for Index := 0 to |ImageFiles| - 1 by 1</l>
<l>    read_image (Image, ImageFiles[Index])</l>
<l>    decompose3(Image,R,G,B)</l>
<l>    trans_from_rgb(R,G,B,Y,U,V,'yuv')</l>
<l>    compose3(Y,U,V,YUV)    </l>
<c>    * Image Acquisition 02: Do something</c>
<c>    * Image Acquisition 01: Do something</c>
<l>    zoom_image_size(YUV, ImageZoomed, 15, 20, 'constant')</l>
<c>        </c>
<c>        * Image Acquisition 01: Do something</c>
<l>    diff_of_gauss(ImageZoomed, DiffOfGauss,1, 0.6)</l>
<c></c>
<l>    get_domain(DiffOfGauss, Domain)</l>
<l>    get_region_points(Domain, Rows, Columns)</l>
<l>    get_grayval(ImageZoomed, Rows, Columns, Grayval)</l>
<c>        </c>
<l>    add_sample_class_svm(SVMHandle,real(Grayval),0)</l>
<c>        </c>
<l>    disp_message(WindowHandle, 'With Mask', 'window', 0, 0, 'black', 'true')</l>
<l>endfor</l>
<c></c>
<l>train_class_svm(SVMHandle, 0.0001,'default')</l>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 06" as_grp="[1,1]" as_ord="1">* Image Acquisition 06: Code generated by Image Acquisition 06</c>
<l as_id="image_acquisition" as_name="Image Acquisition 06" as_grp="[1,2]" as_ord="1">ImageFiles := []</l>
<l as_id="image_acquisition" as_name="Image Acquisition 06" as_grp="[1,3]" as_ord="1">ImageFiles[0] := 'WithMask/11.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 06" as_grp="[1,3]" as_ord="2">ImageFiles[1] := 'WithMask/12.png'</l>
<l as_id="image_acquisition" as_name="Image Acquisition 06" as_grp="[1,3]" as_ord="3">ImageFiles[2] := 'WithMask/13.png'</l>
<l>ImageFiles[3] := 'WithMask/14.png'</l>
<l>ImageFiles[4] := 'WithMask/15.png'</l>
<l>ImageFiles[5] := 'WithMask/16.png'</l>
<l>ImageFiles[6] := 'WithMask/17.png'</l>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 07" as_grp="[1,1]" as_ord="1">* Image Acquisition 07: Code generated by Image Acquisition 07</c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">ImageFiles := []</l>
<l>ImageFiles[0] := 'WithoutMask/11.jpg'</l>
<l>ImageFiles[1] := 'WithoutMask/12.jpg'</l>
<l>ImageFiles[2] := 'WithoutMask/13.jpg'</l>
<l>ImageFiles[3] := 'WithoutMask/14.jpg'</l>
<l>ImageFiles[4] := 'WithoutMask/15.jpg'</l>
<l>ImageFiles[5] := 'WithoutMask/16.jpg'</l>
<l>ImageFiles[6] := 'WithoutMask/17.jpg'</l>
<l>ImageFiles[7] := 'WithoutMask/18.jpg'</l>
<l>ImageFiles[8] := 'WithoutMask/19.jpg'</l>
<l>ImageFiles[9] := 'WithoutMask/20.jpg'</l>
<l>ImageFiles[10] := 'WithoutMask/21.jpg'</l>
<l>ImageFiles[11] := 'WithoutMask/22.jpg'</l>
<l>ImageFiles[12] := 'WithoutMask/23.jpg'</l>
<l>ImageFiles[13] := 'WithoutMask/24.jpg'</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[2,3]" as_ord="1">    read_image (Image, ImageFiles[Index])</l>
<l>    decompose3(Image,R,G,B)</l>
<l>    trans_from_rgb(R,G,B,Y,U,V,'yuv')</l>
<l>    compose3(Y,U,V,YUV)    </l>
<c as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[2,4]" as_ord="1">    * Image Acquisition 03: Do something</c>
<l>    zoom_image_size(YUV, ImageZoomed, 15, 20, 'constant')</l>
<l>    diff_of_gauss(ImageZoomed, DiffOfGauss,1, 0.6)</l>
<c></c>
<l>    get_domain(DiffOfGauss, Domain)</l>
<l>    get_region_points(Domain, Rows, Columns)</l>
<l>    get_grayval(ImageZoomed, Rows, Columns, Grayval)</l>
<l>    classify_class_svm(SVMHandle, real(Grayval), 1, Class)</l>
<l>    dev_display(Image)</l>
<l>    disp_message(WindowHandle, 'Testing', 'window', 0, 0, 'black', 'true')</l>
<l>    disp_message(WindowHandle, '真实值：'+Categories[0]+';'+'预测值：'+Categories[Class], 'window', 20, 20, 'black', 'true')</l>
<l>    wait_seconds(1)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 03" as_grp="[3,1]" as_ord="1">endfor</l>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
