<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="22.05.0.0">
<procedure name="main">
<interface/>
<body>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">read_image (Image, 'D:/BaiduNetdiskDownload/测量/1.jpg')</l>
<l>get_image_size (Image, Width, Height)</l>
<l>dev_close_window ()</l>
<l>dev_open_window_fit_image (Image, 0, 0, -1, -1, WindowHandle)</l>
<l>rgb1_to_gray (Image, GrayImage)</l>
<c>*通过测量助手，大概确定测量的数据</c>
<l>RecLength:=230/2</l>
<l>Recwidth:=120/2</l>
<l>circleraduis:=125</l>
<c>*读入图像路径</c>
<l>ImagePath := []</l>
<l>    ImagePath[0] := 'D:/BaiduNetdiskDownload/测量/1.jpg'</l>
<l>    ImagePath[1] := 'D:/BaiduNetdiskDownload/测量/2.jpg'</l>
<l>    ImagePath[2] := 'D:/BaiduNetdiskDownload/测量/3.jpg'</l>
<l>    ImagePath[3] := 'D:/BaiduNetdiskDownload/测量/4.jpg'</l>
<l>    ImagePath[4] := 'D:/BaiduNetdiskDownload/测量/5.jpg'</l>
<l>    ImagePath[5] := 'D:/BaiduNetdiskDownload/测量/6.jpg'</l>
<l>    ImagePath[6] := 'D:/BaiduNetdiskDownload/测量/7.jpg'</l>
<c></c>
<l> for i := 0 to 6 by 1</l>
<l>    read_image (Image, ImagePath[i])</l>
<l>    rgb1_to_gray (Image, GrayImage)</l>
<c>    *选中待测量的圆，求圆心坐标</c>
<l>    threshold (GrayImage, Regions1, 0, 165)</l>
<l>    fill_up (Regions1, RegionFillUp1)</l>
<l>    connection (RegionFillUp1, ConnectedRegions1)   </l>
<l>    select_shape (ConnectedRegions1, SelectedRegions1, ['area','circularity'], 'and', [30496.5,0.8], [156738,1])</l>
<l>    area_center (SelectedRegions1, Area, Row, Column)</l>
<c>    *选中待测量的矩形，求矩形中心坐标和角度</c>
<l>    threshold (GrayImage, Regions, 0, 5)</l>
<l>    connection (Regions, ConnectedRegions)   </l>
<l>    select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 18829.8, 29468.1)</l>
<l>    area_center (SelectedRegions, Area1, Row2, Column2)</l>
<l>    orientation_region (SelectedRegions, Phi)</l>
<c>    *计算图中矩形的数量</c>
<l>    count_obj (SelectedRegions, RecNumber)</l>
<c>    *计算图中圆的数量</c>
<l>    count_obj (SelectedRegions1, Number)</l>
<c>    </c>
<c>    *创建计量模型</c>
<l>    create_metrology_model (MetrologyHandle)</l>
<c>    *设置计量模型的尺寸</c>
<l>    set_metrology_model_image_size (MetrologyHandle, Width, Height)</l>
<c>    *只有一个圆</c>
<l>    if(Number=1)</l>
<c>        *添加圆的坐标和大概的半径</c>
<l>        add_metrology_object_circle_measure (MetrologyHandle, Row, Column, circleraduis, 30, 5, 1, 30, [], [], Index)  </l>
<c>        *显示圆的边缘轮廓</c>
<l>        get_metrology_object_model_contour (Contour, MetrologyHandle, Index, 1.5)</l>
<c>        *显示圆轮廓的测量范围</c>
<l>        get_metrology_object_measures (Contours, MetrologyHandle, 'all', 'all', Row1, Column1)</l>
<c>        *计算</c>
<l>        apply_metrology_model (GrayImage, MetrologyHandle)</l>
<l>        get_metrology_object_result_contour (Contour2, MetrologyHandle, 0, 'all', 1.5)</l>
<c>        *得到半径</c>
<l>        get_metrology_object_result (MetrologyHandle, Index, 'all', 'result_type', 'radius', Parameter)</l>
<c>        *显示结果</c>
<l>        set_display_font (WindowHandle, 14, 'mono', 'true', 'false')</l>
<l>        disp_message (WindowHandle, '半径：'+Parameter, 'window', Row-480, Column-310, 'red', 'true')</l>
<l>    endif</l>
<c>    *有两个圆</c>
<l>    if(Number=2)</l>
<c>        *要设置两个半径</c>
<l>        circleraduis2:=[circleraduis,circleraduis]</l>
<l>        add_metrology_object_circle_measure (MetrologyHandle, Row, Column,circleraduis2, 30, 5, 1, 30, [], [], Index)</l>
<l>        get_metrology_object_model_contour (Contour, MetrologyHandle, Index, 1.5)</l>
<l>        get_metrology_object_measures (Contours, MetrologyHandle, 'all', 'all', Row1, Column1)</l>
<l>        apply_metrology_model (GrayImage, MetrologyHandle)</l>
<l>        get_metrology_object_result (MetrologyHandle, Index, 'all', 'result_type', 'radius', Parameter)</l>
<l>        set_display_font (WindowHandle, 14, 'mono', 'true', 'false')</l>
<l>        disp_message (WindowHandle, '半径：'+Parameter[0], 'window', Row[0]-330, Column[0]-400, 'red', 'true')</l>
<l>        disp_message (WindowHandle, '半径：'+Parameter[1], 'window', Row[1]-540, Column[1]-250, 'red', 'true')</l>
<l>    endif</l>
<c>    *只有一个矩形</c>
<l>    if(RecNumber=1)</l>
<c>        *添加矩形的坐标和角度，大致的测量范围</c>
<l>        dev_display (GrayImage)</l>
<l>        add_metrology_object_rectangle2_measure (MetrologyHandle, Row2, Column2, Phi, RecLength, Recwidth, 20, 5, 1, 30, [], [], Index1)</l>
<c>        *显示矩形的边缘轮廓</c>
<l>        get_metrology_object_model_contour (Contour1, MetrologyHandle, Index1, 1.5)</l>
<c>        *得到矩形的测量范围</c>
<l>        get_metrology_object_measures (Contours1, MetrologyHandle, 'all', 'all', Row3, Column3)</l>
<c>        *计算</c>
<l>        apply_metrology_model (GrayImage, MetrologyHandle)</l>
<l>        get_metrology_object_result_contour (Contour3, MetrologyHandle, 0, 'all', 1.5)</l>
<c>        *得到矩形的长和宽</c>
<l>        get_metrology_object_result (MetrologyHandle, Index1, 'all', 'result_type', 'length1', Parameter11)</l>
<l>        get_metrology_object_result (MetrologyHandle, Index1, 'all', 'result_type', 'length2', Parameter12)</l>
<c>        *显示</c>
<l>        disp_message (WindowHandle, '长度：'+2*Parameter11+'  '+'宽度：'+Parameter12, 'window', Row2-300, Column2-300, 'red', 'true')</l>
<l>    endif</l>
<c>    *有两个矩形</c>
<l>    if(RecNumber=2)</l>
<c>        *设置两个大致的长的宽</c>
<l>        RecLength2:=[RecLength,RecLength]</l>
<l>        Recwidth2:=[Recwidth,Recwidth]</l>
<l>        add_metrology_object_rectangle2_measure (MetrologyHandle, Row2, Column2, Phi, RecLength2, Recwidth2, 20, 5, 1, 30, [], [], Index1)</l>
<l>        get_metrology_object_model_contour (Contour1, MetrologyHandle, Index1, 1.5)</l>
<l>        get_metrology_object_measures (Contours1, MetrologyHandle, 'all', 'all', Row3, Column3)</l>
<l>        apply_metrology_model (GrayImage, MetrologyHandle)</l>
<l>        get_metrology_object_result (MetrologyHandle, Index1, 'all', 'result_type', 'length1', Parameter11)</l>
<l>        get_metrology_object_result (MetrologyHandle, Index1, 'all', 'result_type', 'length2', Parameter12)</l>
<l>        disp_message (WindowHandle, '长度：'+2*Parameter11[0]+'  '+'宽度：'+Parameter12[1], 'window', Row2[0]-300, Column2[0]-300, 'red', 'true')</l>
<l>        disp_message (WindowHandle, '长度：'+2*Parameter11[1]+'  '+'宽度：'+Parameter12[1], 'window', Row2[1]-500, Column2[1]-650, 'red', 'true')</l>
<l>    endif</l>
<c>    *有三个圆</c>
<l>    if(RecNumber=3)</l>
<c>        *设置三个大致的长和宽</c>
<l>        RecLength3:=[RecLength,RecLength,RecLength]</l>
<l>        Recwidth3:=[Recwidth,Recwidth,Recwidth]</l>
<l>        add_metrology_object_rectangle2_measure (MetrologyHandle, Row2, Column2, Phi, RecLength3, Recwidth3, 20, 5, 1, 30, [], [], Index1)</l>
<l>        get_metrology_object_model_contour (Contour1, MetrologyHandle, Index1, 1.5)</l>
<l>        get_metrology_object_measures (Contours1, MetrologyHandle, 'all', 'all', Row3, Column3)</l>
<l>        apply_metrology_model (GrayImage, MetrologyHandle)</l>
<l>        get_metrology_object_result (MetrologyHandle, Index1, 'all', 'result_type', 'length1', Parameter11)</l>
<l>        get_metrology_object_result (MetrologyHandle, Index1, 'all', 'result_type', 'length2', Parameter12)</l>
<l>        disp_message (WindowHandle, '长度：'+2*Parameter11[0]+'  '+'宽度：'+Parameter12[1], 'window', Row2[0]-400, Column2[0]-200, 'red', 'true')</l>
<l>        disp_message (WindowHandle, '长度：'+2*Parameter11[1]+'  '+'宽度：'+Parameter12[1], 'window', Row2[1]-450, Column2[1]-550, 'red', 'true')</l>
<l>        disp_message (WindowHandle, '长度：'+2*Parameter11[2]+'  '+'宽度：'+Parameter12[2], 'window', Row2[2]-700, Column2[2]-500, 'red', 'true')</l>
<l>    endif</l>
<c>    *清空计量模型     </c>
<l>    clear_metrology_model (MetrologyHandle)</l>
<l>    stop()</l>
<l> endfor</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
